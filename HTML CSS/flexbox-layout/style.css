* {
    /*selettore "universale" che indica TUTTI gli elementi sulla pagina*/

    box-sizing:  border-box;
    /* in questo modo il PADDING non fa più allargare l'elemento verso l'esterno */
    /*NOTA: il box-sizing di default dei browser è content-box ma non si usa quasi mai */

    /* Diamo sempre questa regola a meno che non venga già gestita dal framework (es. bootstrap)  */
}

body {
    font-family: 'Open Sans', sans-serif;
}

img {
    /*rendo fluide TUTTE le immagini */
     /*l'immagine diventa fluida e non esce dal contenitore anche se la sua 
    dimensione intrinseca è più grande */
    max-width: 100%;
    height:auto; 
}

/* creo una classe generica "container" che mi serve per stringere gli elementi sulla pagina */
.container {

    max-width: 1200px;
    margin:0 auto;
}

/* -------------------------------------------------------------------------- */
/*                                HEADER E LOGO                               */
/* -------------------------------------------------------------------------- */

/*creo una classe generica 'container' */


.logo img {
    /*imposto le dimensioni del logo */
        height: 3rem;
        width: auto;
}

.mainHeader{
     display: flex; /*applichiamo display flex al genitore di LOGO E MENU */

     justify-content: space-between; /* affianca sull'asse principale e disporre*/

     align-items: center;/* allineo al centrio sull'asse verticale */

}

.mainMenu ul{
    list-style-type: none;
    margin: 0;  /* si possono cambiare i pallini della lista guarda le opzioni */

    display: flex; /* display flex li affianca*/  
    gap: 1.5rem;/* aggiunge spazio vuoto tra gli elementi figli*/
}

/* -------------------------------------------------------------------------- */
/*                            HERO E CALL TO ACTION                           */
/* -------------------------------------------------------------------------- */

.hero{
    background-image: url('https://source.unsplash.com/1920x1080?beach');

    /*faccio in modo che l'immagine si adatti al contenitore */
    background-size: cover;
    background-position: center center;
    background-repeat: no-repeat;

    /* imposto l'altezza della hero section*/
    height: 100vh; /* alto come tutto il viewport*/

    /* posiziono il div con la call to action */

    display: flex; /* per capire bene flex all'inizio usare l'ispezione sull'html con i colori ecc*/

    justify-content: center; /* al centro verticale */
    align-items: center; /* testo inserito al centro dell'immagine*/

     /*anche i figli di questo elemento prenderanno la regola text-align:center perché
    è una proprietà ereditaria */
}


/* -------------------------------------------------------------------------- */
/*                                   SERVIZI                                  */
/* -------------------------------------------------------------------------- */
.servImage{
    width: 33.33%;
}

.servText{
   /* l'immagine dentro */
    max-width: 66.66%;
}

/* questa non serve piu' perche' l'abbiamo inserite sopra
.servImage img{
    max-width: 100%;
}*/

section.servizi{ /*con questo selettore specifico che le due condizioni debbano verificarsi assieme. L'elemento deve essere sia un tag Section, sia avere la classe dei servizi.
    
Qua non e' strettamente necesario, basta scrivere servizi*/

    padding-top: 3rem;
}

.servBox{
    display: flex;
    align-items: center;
    column-gap: 1rem; /* lo spazio tra le colonne*/
    padding-bottom: 3rem;
}



.servBox:nth-of-type(even) .servImage{
    /* seleziono tutti gli ementi .servImage dentro gli elementi .servBox di numero pari*/
    order:1;

     /* altre pseudoclassi simili sono :last-of-type(seleziona solo l'ultimo e :first-of-type(seleziona solo la prima)*/
}


/* i due punti attiva quello che sia una pseudo classe che attiva il componenete in un stato particolare, odd gli diciamo solo i dispari, even pari. in seguito gli diciamo che tutte le servImage, hanno questa prioprieta'*/

.servBox:nth-of-type(even) .servText{
    text-align: right;
}

/*se voglio faccio lo stesso con i .servText dentro i .servBox pari e allineo a destra il testo */
.servBox:nth-of-type(even) .servText {
    text-align: right;
}


.gallery{
    display: flex;
    flex-wrap: wrap; /*vai a capo quando finisci lo spazio*/


}

.galleryItem{ /*imposto la larghezza per aver 4 colonne*/
    /*width: calc(25% - 0.75rem);*/
    width: 25%;
     /* width: calc(25% - 0.75rem); */
}

.galleryItem img{
    /*per eliminare lo spazio indesiderato sotto le immagini, trasformo le immagini in elemento blocco */
    display: block;
    
}

.gallery {
    gap:1rem; /*distanzia tutti gli elementi di 1 rem */
  }

  .galleryItem {
    padding: 0; /*non mi serve il padding */
    width:calc(25% - 0.75rem);
    
    /*NOTA: calc vuole SEMPRE lo spazio tra i due elementi e il segno */
    /* Perché 0.75 REM? Perché usando il GAP di 1rem su 4 colonne, abbiamo creato 3 spazi da 1rem.
    Questo spazio va "spalmato" sui 4 elementi (galleryItem) e quindi 3rem/4=0.75
    */

  }
footer {
    padding-top: 2rem;
    padding-bottom: 2rem;
    text-align: center;
    background-color: #666;

    margin-top: 2rem;
}